***************
*** 171,191 ****
        '#type' => 'checkbox',
        '#title' => $this->t('Email the author?'),
        '#default_value' => $content_moderation_notification->sendToAuthor(),
-       '#description' => $this->t('Send notifications to the current author of the content.'),
      ];
  
-     $form['emails'] = [
-       '#type' => 'textfield',
-       '#title' => $this->t('Adhoc email addresses'),
-       '#default_value' => $content_moderation_notification->getEmails(),
-       '#description' => $this->t('Send notifications to these email addresses, emails should be entered as a comma separated list.'),
      ];
  
      // Email subject line.
      $form['subject'] = [
-       '#type' => 'textfield',
        '#title' => $this->t('Email Subject'),
        '#default_value' => $content_moderation_notification->getSubject(),
      ];
  
      // Email body content.
--- 171,226 ----
        '#type' => 'checkbox',
        '#title' => $this->t('Email the author?'),
        '#default_value' => $content_moderation_notification->sendToAuthor(),
+       '#description' => $this->t('Send notifications to the current author of the content by adding Author\'s email address to the TO address.'),
      ];
  
+     $form['to'] = [
+       '#type' => 'textarea',
+       '#rows' => $this->textareaCountLines($content_moderation_notification->getTo()),
+       '#title' => $this->t('TO email addresses'),
+       '#default_value' => $content_moderation_notification->getTo(),
+       '#description' => $this->t('Send notifications to these email addresses in the TO: field. Separate emails with commas or newlines. You may use Twig templating code in this field.'),
+     ];
+ 
+     $form['cc'] = [
+       '#type' => 'textarea',
+       '#rows' => $this->textareaCountLines($content_moderation_notification->getCc()),
+       '#title' => $this->t('CC email addresses'),
+       '#default_value' => $content_moderation_notification->getCc(),
+       '#description' => $this->t('Send notifications to these email addresses in the Cc: field. Separate emails with commas or newlines. You may use Twig templating code in this field.'),
+     ];
+ 
+     $form['bcc'] = [
+       '#type' => 'textarea',
+       '#rows' => $this->textareaCountLines($content_moderation_notification->getBcc()),
+       '#title' => $this->t('BCC email addresses'),
+       '#default_value' => $content_moderation_notification->getBcc(),
+       '#description' => $this->t('Send notifications to these email addresses in the Bcc: field. Put email addresses here if you do not want recipients to see each other\'s email addresses. Separate emails with commas or newlines. You may use Twig templating code in this field. <em>(You should have an address listed in the To: field as well, as some email systems will promote Bcc to To: if To: is empty.)</em>'),
+     ];
+ 
+     $form['replyto'] = [
+       '#type' => 'textarea',
+       '#rows' => $this->textareaCountLines($content_moderation_notification->getReplyTo()),
+       '#title' => $this->t('REPLY-TO email addresses'),
+       '#default_value' => $content_moderation_notification->getReplyTo(),
+       '#description' => $this->t('Specify a Reply-To address for the email.  You may use Twig templating code in this field.'),
+     ];
+ 
+     $form['from'] = [
+       '#type' => 'textarea',
+       '#rows' => $this->textareaCountLines($content_moderation_notification->getFrom()),
+       '#title' => $this->t('FROM email address'),
+       '#default_value' => $content_moderation_notification->getFrom(),
+       '#description' => $this->t('Send notifications From this email address. You may use Twig templating code in this field.  If this field is empty, the site email address <em>@email</em> will be used. You should usually use the REPLY-TO header instead of FROM to comply with <a href="@link">DMARC</a> policies.', ['@email' => \Drupal::config('system.site')->get('mail'), '@link' => 'https://dmarc.org/wiki/FAQ']),
      ];
  
      // Email subject line.
      $form['subject'] = [
+       '#type' => 'textarea',
+       '#rows' => $this->textareaCountLines($content_moderation_notification->getSubject()),
        '#title' => $this->t('Email Subject'),
        '#default_value' => $content_moderation_notification->getSubject(),
+       '#description' => $this->t('The subject of the message.  Multiple lines will joined into a single line.  You may use Twig templating code in this field.'),
      ];
  
      // Email body content.
***************
*** 194,201 ****
        '#format' => $content_moderation_notification->getMessageFormat() ?: filter_default_format(),
        '#title' => $this->t('Email Body'),
        '#default_value' => $content_moderation_notification->getMessage(),
      ];
  
      // Return the form.
      return $form;
    }
--- 229,417 ----
        '#format' => $content_moderation_notification->getMessageFormat() ?: filter_default_format(),
        '#title' => $this->t('Email Body'),
        '#default_value' => $content_moderation_notification->getMessage(),
+       '#description' => $this->t('The body of the email message.  You may use Twig templating code in this field, but make sure there is no accidental HTML inside the Twig tags if editing with the WYSIWYG editor (it may be easier to edit using the Source option, if available.)'),
+     ];
+ 
+     $form['abort'] = [
+       '#type' => 'textfield',
+       '#rows' => 1,
+       '#title' => $this->t('"Abort Sending" Email Address'),
+       '#default_value' => $content_moderation_notification->getAbort(),
+       '#description' => $this->t('Prevent all notifications from being sent if this email address is present in the TO, CC or BCC fields.  If this field is empty will not affect any notifications.  (Use something that would not normally be delivered, such as <em>abort@example.com</em>.'),
+     ];
+ 
+     // Enable Debug Mode?
+     $form['debug'] = [
+       '#type' => 'checkbox',
+       '#title' => $this->t('Debug Notification'),
+       '#default_value' => $content_moderation_notification->getDebug(),
+       '#description' => $this->t('Display notification message details and prevent email from being sent.'),
      ];
  
+     $tips = <<<HTML
+ <table>
+   <tr>
+     <th>Placeholder</th>
+     <th>Example</th>
+     <th>Description</th>
+   </tr>
+   <tr>
+     <td>{{ workflow }}</td>
+     <td>Editorial</td>
+     <td>The Workflow being executed (user-friendly label)</td>
+   </tr>
+   <tr>
+     <td>{{ workflow_id }}</td>
+     <td>editorial</td>
+     <td>The machine name of the Workflow being executed</td>
+   </tr>
+   <tr>
+     <td>{{ transition }}</td>
+     <td>Create New Draft</td>
+     <td>The Workflow Transition being executed (user-friendly label)</td>
+   </tr>
+   <tr>
+     <td>{{ transition_id }}</td>
+     <td>create_new_draft</td>
+     <td>The machine name of the Workflow Transition being executed</td>
+   </tr>
+   <tr>
+     <td>{{ prev_state }}</td>
+     <td>Draft</td>
+     <td>The previous Workflow State, before the content was edited (user-friendly label)</td>
+   </tr>
+   <tr>
+     <td>{{ prev_state_id }}</td>
+     <td>draft</td>
+     <td>The machine name of the previous Workflow State, before the content was edited</td>
+   </tr>
+   <tr>
+     <td>{{ new_state }} or {{ state }}</td>
+     <td>Published</td>
+     <td>The new Workflow State, after the content was edited (user-friendly label) <br />[Not working yet - only shows machine name]</td>
+   </tr>
+   <tr>
+     <td>{{ new_state_id }} or {{ state_id }}</td>
+     <td>published</td>
+     <td>The machine name of the new Workflow State, after the content was edited</td>
+   </tr>
+   <tr>
+     <td>{{ user.email }}</td>
+     <td>user@example.com</td>
+     <td>The current logged-in user's email address</td>
+   </tr>
+   <tr>
+     <td>{{ user.username }}</td>
+     <td>druplicon</td>
+     <td>The current logged-in user's username / login name</td>
+   </tr>
+   <tr>
+     <td>{{ user.displayname }}</td>
+     <td>Druplicon Logoman</td>
+     <td>The current logged-in user's display name</td>
+   </tr>
+   <tr>
+     <td>{{ entity.Owner.mail.0.value }}</td>
+     <td>author@example.com</td>
+     <td>The author's email address</td>
+   </tr>
+   <tr>
+     <td>{{ entity.Owner.username }}</td>
+     <td>aardvark</td>
+     <td>The author's username / login name</td>
+   </tr>
+   <tr>
+     <td>{{ entity.Owner.displayname }}</td>
+     <td>Aardvark Jones</td>
+     <td>The author's display name</td>
+   </tr>
+   <tr>
+     <td>{{ entity.Owner.id }}</td>
+     <td>43</td>
+     <td>The author's User ID (UID)</td>
+   </tr>
+   <tr>
+     <td>{{ entity.title.value }}</td>
+     <td>The Prince Groom</td>
+     <td>The entity's Title</td>
+   </tr>
+   <tr>
+     <td>{{ entity.bundle }}</td>
+     <td>basic_page</td>
+     <td>Entity Bundle (Content type system name)</td>
+   </tr>
+   <tr>
+     <td>{{ entity.type.entity.label }}</td>
+     <td>Basic Page</td>
+     <td>Entity Bundle Label (Content type name)</td>
+   </tr>
+   <tr>
+     <td>{{ entity.nid.value }}</td>
+     <td>1235</td>
+     <td>The entity ID / Node ID</td>
+   </tr>
+   <tr>
+     <td>{{ entity.vid.value }}</td>
+     <td>6890</td>
+     <td>The entity / node Revision ID (VID)</td>
+   </tr>
+   <tr>
+     <td>{{ entity.uuid.value }}</td>
+     <td>68d0a104-a5bf-466c-a429-f871d91f9581</td>
+     <td>The entity's Universally Unique ID (UUID)</td>
+   </tr>
+   <tr>
+     <td>{# comment goes here #}</td>
+     <td>{# check the editor exists #}</td>
+     <td>Put comments in the code that will not affect output</td>
+   </tr>
+   <tr>
+     <td>{% if entity.bundle == 'article' %}<br />&nbsp;&nbsp;{{ field_editor_user_ref.entity.mail.0.value }}<br />{% endif %}</td>
+     <td>editor_bob@example.com</td>
+     <td>Twig statements for conditional logic</td>
+   </tr>
+   <tr>
+     <td>{% include('my_template.twig.html') %}</td>
+     <td>{{ 'my_template output here'|title }}</td>
+     <td>Include external template file from filesystem (if you don't want (much) Twig code in your database)</td>
+   </tr>
+   <tr>
+     <td>{{ site_email }}</td>
+     <td>noreply@example.com</td>
+     <td>The default site email address</td>
+   </tr>
+   <tr>
+     <td>{{ site_name }}</td>
+     <td>Example Warehouse</td>
+     <td>The site's name</td>
+   </tr>
+   <tr>
+     <td>{{ site_slogan }}</td>
+     <td>All The Best Examples In One Place</td>
+     <td>The site's slogan</td>
+   </tr>
+   <tr>
+     <td>{{ site_front }}</td>
+     <td>/node/1</td>
+     <td>The site's front page path</td>
+   </tr>
+   <tr>
+     <td>{{ base_url }}</td>
+     <td>https://example.com/</td>
+     <td>The site's base URL</td>
+   </tr>
+ 
+ </table>
+ HTML;
+ 
+     $form['tips'] = array(
+       '#type' => 'details',
+       '#title' => t('Common Replacement Patterns'),
+       '#open' => FALSE, // Controls the HTML5 'open' attribute. Defaults to FALSE.
+       '#description' => t($tips),
+ 
+     );
+ 
      // Return the form.
      return $form;
    }
